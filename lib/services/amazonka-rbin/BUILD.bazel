load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-rbin/amazonka-rbin.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-rbin",
    srcs = [
        "gen/Amazonka/RBin.hs",
        "gen/Amazonka/RBin/CreateRule.hs",
        "gen/Amazonka/RBin/DeleteRule.hs",
        "gen/Amazonka/RBin/GetRule.hs",
        "gen/Amazonka/RBin/Lens.hs",
        "gen/Amazonka/RBin/ListRules.hs",
        "gen/Amazonka/RBin/ListTagsForResource.hs",
        "gen/Amazonka/RBin/TagResource.hs",
        "gen/Amazonka/RBin/Types.hs",
        "gen/Amazonka/RBin/Types/ResourceTag.hs",
        "gen/Amazonka/RBin/Types/ResourceType.hs",
        "gen/Amazonka/RBin/Types/RetentionPeriod.hs",
        "gen/Amazonka/RBin/Types/RetentionPeriodUnit.hs",
        "gen/Amazonka/RBin/Types/RuleStatus.hs",
        "gen/Amazonka/RBin/Types/RuleSummary.hs",
        "gen/Amazonka/RBin/Types/Tag.hs",
        "gen/Amazonka/RBin/UntagResource.hs",
        "gen/Amazonka/RBin/UpdateRule.hs",
        "gen/Amazonka/RBin/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_rbin=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-rbin/amazonka-rbin.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-rbin-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/RBin.hs",
        "test/Test/Amazonka/RBin.hs",
        "test/Test/Amazonka/RBin/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_rbin=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-rbin",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
